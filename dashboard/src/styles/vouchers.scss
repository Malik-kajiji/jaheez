@import './car-tow-variables';
@import './colors';

.vouchers {
  background-color: var(--bg-color);
  width: calc(100% - 320px); // Subtract sidebar width
  max-width: calc(100vw - 320px); // Prevent overflow
  margin-right: 320px; // Account for fixed sidebar width
  padding: map-get($spacing, 'xl');
  transition: all 0.3s ease;
  box-sizing: border-box;

  .header {
    @include flex(row, space-between, center);
    margin-bottom: map-get($spacing, 'xl');

    .title {
      h1 {
        margin-bottom: map-get($spacing, 'xs');
      }
    }

    .create-btn {
      @include flex(row, center, center);
      gap: map-get($spacing, 'sm');
      padding: map-get($spacing, 'sm') map-get($spacing, 'lg');
      background-color: var(--primary-color);
      color: white;
      border-radius: map-get($border-radius, 'md');
      transition: map-get($transitions, 'fast');

      svg {
        font-size: map-get($font-sizes, 'normal');
      }

      &:hover {
        transform: translateY(-1px);
        box-shadow: map-get($shadows, 'md');
      }
    }
  }

  .cards-container {
    width: 100%;
  }

  .voucher-types {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
    gap: map-get($spacing, 'lg');

    .voucher-card {
      @include card-base;
      padding: map-get($spacing, 'lg');
      position: relative;
      cursor: pointer;
      background-color: var(--side-bar-color);

      .delete-btn {
        position: absolute;
        top: map-get($spacing, 'md');
        right: map-get($spacing, 'md');
        width: 32px;
        height: 32px;
        @include flex(row, center, center);
        background-color: var(--danger-bg);
        color: var(--danger-color);
        border-radius: map-get($border-radius, 'md');
        transition: map-get($transitions, 'fast');
        opacity: 0;
        transform: translateY(-5px);
        z-index: 1;

        svg {
          font-size: map-get($font-sizes, 'normal');
        }

        .loading-spinner {
          width: 16px;
          height: 16px;
          border: 2px solid rgba(220, 38, 38, 0.3);
          border-radius: 50%;
          border-top-color: var(--danger-color);
          animation: spin 0.8s linear infinite;
        }

        &:hover {
          background-color: var(--danger-color);
          color: white;
        }
      }

      &:hover {
        .delete-btn {
          opacity: 1;
          transform: translateY(0);
        }
      }

      .value {
        text-align: center;
        margin-bottom: map-get($spacing, 'lg');

        h2 {
          color: var(--dark-text-color);
          font-size: map-get($font-sizes, '2xl');
          font-weight: map-get($font-weights, 'bold');

          span {
            color: var(--primary-color);
            margin-left: map-get($spacing, 'xs');
          }
        }
      }

      .available-count {
        text-align: center;
        
        p {
          color: var(--light-text-color);
          font-size: map-get($font-sizes, 'sm');
          margin-bottom: map-get($spacing, 'xs');
        }

        .count {
          color: var(--normal-text-color);
          font-size: map-get($font-sizes, 'lg');
          font-weight: map-get($font-weights, 'semibold');
        }
      }
    }
  }

  // Responsive breakpoints matching sidebar
  @media screen and (max-width: 1200px) {
    width: calc(100% - 300px);
    max-width: calc(100vw - 300px);
    margin-right: 300px; // Match sidebar width at this breakpoint
  }

  @media screen and (max-width: 992px) {
    width: 100%;
    max-width: 100vw;
    margin-right: 0; // Sidebar becomes overlay on mobile
    padding: map-get($spacing, 'lg');

    .header {
      flex-direction: column;
      align-items: flex-start;
      gap: map-get($spacing, 'md');

      .create-btn {
        width: 100%;
        justify-content: center;
      }
    }

    .voucher-types {
      grid-template-columns: 1fr;

      .voucher-card {
        .delete-btn {
          opacity: 1;
          transform: translateY(0);
        }
      }
    }
  }

  @media screen and (max-width: 768px) {
    padding: map-get($spacing, 'md');
  }

  @media screen and (max-width: 480px) {
    padding: map-get($spacing, 'sm');
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}