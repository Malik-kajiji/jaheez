@import './car-tow-variables';
@import './colors';

.coupons {
  background-color: var(--bg-color);
  width: calc(100% - 320px);
  max-width: calc(100vw - 320px);
  margin-right: 320px;
  padding: map-get($spacing, 'xl');
  transition: all 0.3s ease;
  box-sizing: border-box;

  .header {
    @include flex(row, space-between, center);
    margin-bottom: map-get($spacing, 'xl');

    .title {
      h1 {
        margin-bottom: map-get($spacing, 'xs');
      }
    }

    .create-btn {
      @include flex(row, center, center);
      gap: map-get($spacing, 'sm');
      padding: map-get($spacing, 'sm') map-get($spacing, 'lg');
      background-color: var(--primary-color);
      color: white;
      border-radius: map-get($border-radius, 'md');
      transition: map-get($transitions, 'fast');

      svg {
        font-size: map-get($font-sizes, 'normal');
      }

      &:hover {
        transform: translateY(-1px);
        box-shadow: map-get($shadows, 'md');
      }
    }
  }

  .stats-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: map-get($spacing, 'lg');
    margin-bottom: map-get($spacing, 'xl');

    .stat-card {
      background-color: var(--side-bar-color);
      padding: map-get($spacing, 'lg');
      border-radius: map-get($border-radius, 'lg');
      border: 2px solid var(--borders-color);
      transition: map-get($transitions, 'fast');

      h3 {
        color: var(--light-text-color);
        font-size: map-get($font-sizes, 'sm');
        margin-bottom: map-get($spacing, 'md');
      }

      .stat-value {
        color: var(--dark-text-color);
        font-size: map-get($font-sizes, 'xl');
        font-weight: map-get($font-weights, 'bold');
      }

      &.active {
        border-color: var(--success-color);
        .stat-value {
          color: var(--success-color);
        }
      }

      &.paused {
        border-color: var(--warning-color);
        .stat-value {
          color: var(--warning-color);
        }
      }

      &.expired {
        border-color: var(--danger-color);
        .stat-value {
          color: var(--danger-color);
        }
      }

      &.savings {
        border-color: var(--primary-color);
        .stat-value {
          color: var(--primary-color);
        }
      }

      &:hover {
        transform: translateY(-2px);
        box-shadow: map-get($shadows, 'md');
      }
    }
  }

  .filters-section {
    @include flex(row, space-between, center);
    gap: map-get($spacing, 'lg');
    margin-bottom: map-get($spacing, 'xl');
    padding: map-get($spacing, 'lg');
    background-color: var(--side-bar-color);
    border-radius: map-get($border-radius, 'lg');

    .sort-group {
      @include flex(row, flex-start, center);
      gap: map-get($spacing, 'md');

      label {
        color: var(--normal-text-color);
        font-size: map-get($font-sizes, 'normal');
        font-weight: map-get($font-weights, 'medium');
      }

      .sort-buttons {
        @include flex(row, flex-start, center);
        gap: map-get($spacing, 'sm');

        .sort-btn {
          padding: map-get($spacing, 'xs') map-get($spacing, 'md');
          border-radius: map-get($border-radius, 'md');
          background-color: var(--bg-color);
          border: 1px solid var(--borders-color);
          color: var(--normal-text-color);
          font-size: map-get($font-sizes, 'sm');
          transition: map-get($transitions, 'fast');

          &:hover {
            border-color: var(--primary-color);
            color: var(--primary-color);
          }

          &.active {
            background-color: var(--primary-color);
            border-color: var(--primary-color);
            color: white;
          }
        }
      }
    }

    .state-filters {
      @include flex(row, flex-end, center);
      gap: map-get($spacing, 'sm');

      .filter-btn {
        padding: map-get($spacing, 'sm') map-get($spacing, 'md');
        border-radius: map-get($border-radius, 'md');
        background-color: var(--bg-color);
        border: 1px solid var(--borders-color);
        color: var(--normal-text-color);
        font-size: map-get($font-sizes, 'normal');
        transition: map-get($transitions, 'fast');

        &:hover {
          border-color: var(--primary-color);
          color: var(--primary-color);
        }

        &.active {
          background-color: var(--primary-color);
          border-color: var(--primary-color);
          color: white;
        }
      }
    }
  }

  .coupons-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
    gap: map-get($spacing, 'lg');

    .coupon-card {
      @include card-base;
      padding: map-get($spacing, 'lg');
      background-color: var(--side-bar-color);

      .card-header {
        @include flex(row, space-between, flex-start);
        margin-bottom: map-get($spacing, 'lg');
        padding-bottom: map-get($spacing, 'md');
        border-bottom: 2px solid var(--borders-color);

        .coupon-code {
          @include flex(column, flex-start, flex-start);
          gap: map-get($spacing, 'sm');

          .code {
            color: var(--dark-text-color);
            font-size: map-get($font-sizes, 'xl');
            font-weight: map-get($font-weights, 'bold');
            font-family: 'Courier New', monospace;
            background-color: var(--bg-color);
            padding: map-get($spacing, 'xs') map-get($spacing, 'md');
            border-radius: map-get($border-radius, 'md');
          }

          .state-badge {
            padding: map-get($spacing, 'xs') map-get($spacing, 'sm');
            border-radius: map-get($border-radius, 'pill');
            font-size: map-get($font-sizes, 'xs');
            font-weight: map-get($font-weights, 'medium');

            &.active {
              background-color: var(--success-bg);
              color: var(--success-color);
            }

            &.paused {
              background-color: var(--warning-bg);
              color: var(--warning-color);
            }

            &.expired {
              background-color: var(--danger-bg);
              color: var(--danger-color);
            }
          }
        }

        .created-date {
          color: var(--light-text-color);
          font-size: map-get($font-sizes, 'sm');
        }
      }

      .card-body {
        margin-bottom: map-get($spacing, 'lg');

        .info-row {
          @include flex(row, space-between, center);
          padding: map-get($spacing, 'sm') 0;
          border-bottom: 1px solid var(--borders-color);

          &:last-child {
            border-bottom: none;
          }

          .label {
            color: var(--light-text-color);
            font-size: map-get($font-sizes, 'sm');
          }

          .value {
            color: var(--normal-text-color);
            font-size: map-get($font-sizes, 'normal');
            font-weight: map-get($font-weights, 'medium');

            &.discount {
              color: var(--primary-color);
              font-weight: map-get($font-weights, 'bold');
            }

            &.savings {
              color: var(--success-color);
              font-weight: map-get($font-weights, 'semibold');
            }
          }
        }
      }

      .card-footer {
        @include flex(row, space-between, center);
        gap: map-get($spacing, 'sm');
        padding-top: map-get($spacing, 'md');
        border-top: 1px solid var(--borders-color);

        button {
          @include flex(row, center, center);
          gap: map-get($spacing, 'xs');
          padding: map-get($spacing, 'sm') map-get($spacing, 'md');
          border-radius: map-get($border-radius, 'md');
          font-size: map-get($font-sizes, 'sm');
          transition: map-get($transitions, 'fast');
          flex: 1;

          svg {
            font-size: map-get($font-sizes, 'normal');
          }

          &.toggle-btn {
            &.active {
              background-color: var(--success-bg);
              color: var(--success-color);

              &:hover:not(:disabled) {
                background-color: var(--success-color);
                color: white;
              }
            }

            &.paused {
              background-color: var(--warning-bg);
              color: var(--warning-color);

              &:hover:not(:disabled) {
                background-color: var(--warning-color);
                color: white;
              }
            }

            &:disabled {
              opacity: 0.5;
              cursor: not-allowed;
            }
          }

          &.delete-btn {
            background-color: var(--danger-bg);
            color: var(--danger-color);

            .loading-spinner {
              width: 16px;
              height: 16px;
              border: 2px solid rgba(220, 38, 38, 0.3);
              border-radius: 50%;
              border-top-color: var(--danger-color);
              animation: spin 0.8s linear infinite;
            }

            &:hover:not(:disabled) {
              background-color: var(--danger-color);
              color: white;
            }

            &:disabled {
              opacity: 0.7;
              cursor: not-allowed;
            }
          }
        }
      }
    }
  }

  // Responsive breakpoints
  @media screen and (max-width: 1200px) {
    width: calc(100% - 300px);
    max-width: calc(100vw - 300px);
    margin-right: 300px;
  }

  @media screen and (max-width: 992px) {
    width: 100%;
    max-width: 100vw;
    margin-right: 0;
    padding: map-get($spacing, 'lg');

    .header {
      flex-direction: column;
      align-items: flex-start;
      gap: map-get($spacing, 'md');

      .create-btn {
        width: 100%;
        justify-content: center;
      }
    }

    .filters-section {
      flex-direction: column;
      align-items: stretch;
      gap: map-get($spacing, 'md');

      .sort-group {
        width: 100%;
        justify-content: space-between;

        .sort-buttons {
          flex: 1;
          justify-content: flex-end;
        }
      }

      .state-filters {
        justify-content: flex-start;
        overflow-x: auto;

        &::-webkit-scrollbar {
          height: 4px;
        }

        &::-webkit-scrollbar-thumb {
          background-color: var(--borders-color);
          border-radius: map-get($border-radius, 'pill');
        }
      }
    }

    .stats-cards {
      grid-template-columns: repeat(2, 1fr);
    }

    .coupons-grid {
      grid-template-columns: 1fr;
    }
  }

  @media screen and (max-width: 768px) {
    padding: map-get($spacing, 'md');

    .stats-cards {
      grid-template-columns: 1fr;
    }
  }

  @media screen and (max-width: 480px) {
    padding: map-get($spacing, 'sm');

    .coupon-card {
      .card-footer {
        flex-direction: column;

        button {
          width: 100%;
        }
      }
    }
  }
}

// Modal specific styles for coupon modal
.modal-content.coupon-modal {
  max-width: 500px;

  .input-group {
    margin-bottom: map-get($spacing, 'lg');

    label {
      display: block;
      margin-bottom: map-get($spacing, 'xs');
      color: var(--normal-text-color);
      font-size: map-get($font-sizes, 'normal');
      font-weight: map-get($font-weights, 'medium');
    }

    input,
    select {
      width: 100%;
      height: 48px;
      padding: 0 map-get($spacing, 'md');
      border: 2px solid var(--borders-color);
      border-radius: map-get($border-radius, 'md');
      background-color: var(--bg-color);
      color: var(--normal-text-color);
      font-size: map-get($font-sizes, 'normal');
      transition: all map-get($transitions, 'fast');

      &:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px var(--secondary-color);
        outline: none;
      }

      &::placeholder {
        color: var(--light-text-color);
      }
    }

    .error-message {
      color: var(--danger-color);
      font-size: map-get($font-sizes, 'sm');
      margin-top: map-get($spacing, 'xs');
    }
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}