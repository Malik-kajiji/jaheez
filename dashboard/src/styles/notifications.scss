@import './car-tow-variables';
@import './colors';

.notifications {
  background-color: var(--bg-color);
  width: calc(100% - 320px);
  max-width: calc(100vw - 320px);
  margin-right: 320px;
  padding: map-get($spacing, 'xl');
  transition: all 0.3s ease;
  box-sizing: border-box;

  .header {
    @include flex(row, space-between, center);
    margin-bottom: map-get($spacing, 'xl');

    .title {
      h1 {
        margin-bottom: map-get($spacing, 'xs');
      }
    }

    .create-btn {
      @include flex(row, center, center);
      gap: map-get($spacing, 'sm');
      padding: map-get($spacing, 'sm') map-get($spacing, 'lg');
      background-color: var(--primary-color);
      color: white;
      border-radius: map-get($border-radius, 'md');
      transition: map-get($transitions, 'fast');

      svg {
        font-size: map-get($font-sizes, 'normal');
      }

      &:hover {
        transform: translateY(-1px);
        box-shadow: map-get($shadows, 'md');
      }
    }
  }

  .stats-cards {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(180px, 1fr));
    gap: map-get($spacing, 'lg');
    margin-bottom: map-get($spacing, 'xl');

    .stat-card {
      background-color: var(--side-bar-color);
      padding: map-get($spacing, 'lg');
      border-radius: map-get($border-radius, 'lg');
      border: 2px solid var(--borders-color);
      transition: map-get($transitions, 'fast');

      h3 {
        color: var(--light-text-color);
        font-size: map-get($font-sizes, 'sm');
        margin-bottom: map-get($spacing, 'md');
      }

      .stat-value {
        color: var(--dark-text-color);
        font-size: map-get($font-sizes, 'xl');
        font-weight: map-get($font-weights, 'bold');
      }

      &.successful {
        border-color: var(--success-color);
        .stat-value {
          color: var(--success-color);
        }
      }

      &.failed {
        border-color: var(--danger-color);
        .stat-value {
          color: var(--danger-color);
        }
      }

      &.users {
        border-color: var(--info-color);
        .stat-value {
          color: var(--info-color);
        }
      }

      &.drivers {
        border-color: var(--primary-color);
        .stat-value {
          color: var(--primary-color);
        }
      }

      &:hover {
        transform: translateY(-2px);
        box-shadow: map-get($shadows, 'md');
      }
    }
  }

  .filters-section {
    margin-bottom: map-get($spacing, 'xl');
    padding: map-get($spacing, 'lg');
    background-color: var(--side-bar-color);
    border-radius: map-get($border-radius, 'lg');

    .type-filters {
      @include flex(row, flex-start, center);
      gap: map-get($spacing, 'sm');

      .filter-btn {
        padding: map-get($spacing, 'sm') map-get($spacing, 'lg');
        border-radius: map-get($border-radius, 'md');
        background-color: var(--bg-color);
        border: 1px solid var(--borders-color);
        color: var(--normal-text-color);
        font-size: map-get($font-sizes, 'normal');
        transition: map-get($transitions, 'fast');

        &:hover {
          border-color: var(--primary-color);
          color: var(--primary-color);
        }

        &.active {
          background-color: var(--primary-color);
          border-color: var(--primary-color);
          color: white;
        }
      }
    }
  }

  .notifications-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
    gap: map-get($spacing, 'lg');

    .notification-card {
      @include card-base;
      padding: map-get($spacing, 'lg');
      background-color: var(--side-bar-color);

      .card-header {
        @include flex(row, space-between, center);
        margin-bottom: map-get($spacing, 'lg');
        padding-bottom: map-get($spacing, 'md');
        border-bottom: 2px solid var(--borders-color);

        .type-badge {
          @include flex(row, flex-start, center);
          gap: map-get($spacing, 'sm');
          padding: map-get($spacing, 'xs') map-get($spacing, 'md');
          background-color: var(--bg-color);
          border-radius: map-get($border-radius, 'md');
          color: var(--normal-text-color);
          font-weight: map-get($font-weights, 'medium');
          font-size: map-get($font-sizes, 'sm');

          svg {
            font-size: map-get($font-sizes, 'normal');
          }
        }

        .status-icon {
          font-size: map-get($font-sizes, 'xl');

          .success {
            color: var(--success-color);
          }

          .failed {
            color: var(--danger-color);
          }
        }
      }

      .card-body {
        .notification-title {
          color: var(--dark-text-color);
          font-size: map-get($font-sizes, 'lg');
          font-weight: map-get($font-weights, 'bold');
          margin-bottom: map-get($spacing, 'md');
        }

        .notification-body {
          color: var(--normal-text-color);
          font-size: map-get($font-sizes, 'normal');
          line-height: 1.6;
          margin-bottom: map-get($spacing, 'lg');
          padding: map-get($spacing, 'md');
          background-color: var(--bg-color);
          border-radius: map-get($border-radius, 'md');
          border-right: 3px solid var(--primary-color);
        }

        .target-user {
          margin-bottom: map-get($spacing, 'lg');
          padding: map-get($spacing, 'md');
          background-color: var(--info-bg);
          border-radius: map-get($border-radius, 'md');

          h4 {
            color: var(--info-color);
            font-size: map-get($font-sizes, 'sm');
            margin-bottom: map-get($spacing, 'sm');
          }

          .user-name {
            color: var(--dark-text-color);
            font-size: map-get($font-sizes, 'normal');
            font-weight: map-get($font-weights, 'medium');
            margin-bottom: map-get($spacing, 'xs');
          }

          .user-phone {
            color: var(--normal-text-color);
            font-size: map-get($font-sizes, 'sm');
          }
        }

        .date-info {
          @include flex(row, space-between, center);
          padding-top: map-get($spacing, 'md');
          border-top: 1px solid var(--borders-color);

          .date-label {
            color: var(--light-text-color);
            font-size: map-get($font-sizes, 'sm');
          }

          .date-value {
            color: var(--normal-text-color);
            font-size: map-get($font-sizes, 'sm');
          }
        }
      }

      .card-footer {
        @include flex(row, flex-end, center);
        margin-top: map-get($spacing, 'lg');
        padding-top: map-get($spacing, 'md');
        border-top: 1px solid var(--borders-color);

        .delete-btn {
          @include flex(row, center, center);
          gap: map-get($spacing, 'xs');
          padding: map-get($spacing, 'sm') map-get($spacing, 'md');
          border-radius: map-get($border-radius, 'md');
          font-size: map-get($font-sizes, 'sm');
          background-color: var(--danger-bg);
          color: var(--danger-color);
          transition: map-get($transitions, 'fast');

          .loading-spinner {
            width: 16px;
            height: 16px;
            border: 2px solid rgba(220, 38, 38, 0.3);
            border-radius: 50%;
            border-top-color: var(--danger-color);
            animation: spin 0.8s linear infinite;
          }

          &:hover:not(:disabled) {
            background-color: var(--danger-color);
            color: white;
          }

          &:disabled {
            opacity: 0.7;
            cursor: not-allowed;
          }
        }
      }
    }
  }

  // Responsive breakpoints
  @media screen and (max-width: 1200px) {
    width: calc(100% - 300px);
    max-width: calc(100vw - 300px);
    margin-right: 300px;
  }

  @media screen and (max-width: 992px) {
    width: 100%;
    max-width: 100vw;
    margin-right: 0;
    padding: map-get($spacing, 'lg');

    .header {
      flex-direction: column;
      align-items: flex-start;
      gap: map-get($spacing, 'md');

      .create-btn {
        width: 100%;
        justify-content: center;
      }
    }

    .stats-cards {
      grid-template-columns: repeat(2, 1fr);
    }

    .notifications-grid {
      grid-template-columns: 1fr;
    }
  }

  @media screen and (max-width: 768px) {
    padding: map-get($spacing, 'md');

    .stats-cards {
      grid-template-columns: 1fr;
    }
  }

  @media screen and (max-width: 480px) {
    padding: map-get($spacing, 'sm');
  }
}

// Modal specific styles for notification modal
.modal-content.notification-modal {
  max-width: 500px;

  .input-group {
    margin-bottom: map-get($spacing, 'lg');

    label {
      display: block;
      margin-bottom: map-get($spacing, 'xs');
      color: var(--normal-text-color);
      font-size: map-get($font-sizes, 'normal');
      font-weight: map-get($font-weights, 'medium');
    }

    input,
    select,
    textarea {
      width: 100%;
      padding: map-get($spacing, 'sm') map-get($spacing, 'md');
      border: 2px solid var(--borders-color);
      border-radius: map-get($border-radius, 'md');
      background-color: var(--bg-color);
      color: var(--normal-text-color);
      font-size: map-get($font-sizes, 'normal');
      transition: all map-get($transitions, 'fast');

      &:focus {
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px var(--secondary-color);
        outline: none;
      }

      &::placeholder {
        color: var(--light-text-color);
      }
    }

    textarea {
      resize: vertical;
      min-height: 100px;
      font-family: inherit;
    }

    &.checkbox-group {
      .checkbox-label {
        @include flex(row, flex-start, center);
        gap: map-get($spacing, 'sm');
        cursor: pointer;

        input[type="checkbox"] {
          width: auto;
          height: 20px;
          cursor: pointer;
        }

        span {
          color: var(--normal-text-color);
          font-size: map-get($font-sizes, 'normal');
        }
      }
    }

    .error-message {
      color: var(--danger-color);
      font-size: map-get($font-sizes, 'sm');
      margin-top: map-get($spacing, 'xs');
    }
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}